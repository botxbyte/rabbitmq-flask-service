2025-04-06 20:33:38 | INFO | Worker1 initialized and ready to process messages
2025-04-06 20:33:38 | INFO | Base Worker: Starting worker for queue: urls_queue
2025-04-06 20:33:38 | INFO | Base Worker: Will only process messages after 2025-04-06T20:33:38.199368
2025-04-06 20:33:38 | INFO | Base Worker: Skipping old message from 2025-04-06T20:28:32.094888
2025-04-06 20:33:38 | INFO | Base Worker: Started worker1 with PID: 21908, consumer_tag: worker1_21908_1743951818, queue: urls_queue
2025-04-06 20:33:38 | INFO | Started worker1 with PID: 21908, queue: urls_queue
2025-04-06 20:34:08 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:08 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:08 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:08 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:08 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:08 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CBCA0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CBA70>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C3C0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C500>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C7D0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C9B0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CB90>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CD70>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CF50>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D130>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D310>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CBBB0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CB750>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D1D0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CFF0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CE10>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CC30>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CA50>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C870>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C690>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C280>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D6D0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D7C0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D9F0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DBD0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DDB0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DF90>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E170>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E350>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E530>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E710>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E8F0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98EAD0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98ECB0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CB750>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CBBB0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98EF30>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98EC10>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98EA30>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E850>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E670>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E490>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E2B0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E0D0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:09 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:09 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DEF0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:09 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:09 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DD10>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DB30>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D950>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D590>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C550>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C690>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C870>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CA50>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CC30>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CE10>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CFF0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D1D0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CBCA0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CB750>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98F070>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D090>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CEB0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CCD0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CAF0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C910>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C730>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C460>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D400>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D6D0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D7C0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D9F0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DBD0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DDB0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DF90>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E170>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E350>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E530>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E710>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E8F0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98EAD0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CBA70>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CBBB0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98F2F0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98EE40>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98EB70>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E990>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E7B0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E5D0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E3F0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E210>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E030>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DE50>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DC70>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DA90>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D8B0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D680>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C3C0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C4B0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C820>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CA00>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CBE0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CDC0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98F110>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:10 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:10 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:10 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:10 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CBD90>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CB750>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98F4D0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D040>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CF50>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CD70>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CB90>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C9B0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C7D0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C500>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C230>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D630>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D770>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D810>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D9A0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DB80>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DD60>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DF40>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E120>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E300>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E4E0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E6C0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98F020>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CBCA0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE5CBBB0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98F6B0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98F160>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E940>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E760>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E580>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E3A0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98E1C0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DFE0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DE00>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DC20>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98DA40>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D860>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98D5E0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C280>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C640>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C320>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C5F0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C6E0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98C8C0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | ERROR | Base Worker: Full exception details:
Traceback (most recent call last):

  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1009, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000186DAE70D60>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 1052, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000186DAE70A40>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\threading.py", line 989, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    │        │    └ ()
    │    │        └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>
    │    └ <bound method BaseWorker._consume_wrapper of <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>>
    └ <Thread(consumer-urls_queue-worker1, started daemon 11688)>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 118, in _consume_wrapper
    self.channel.start_consuming()
    │    │       └ <function BlockingChannel.start_consuming at 0x00000186DE2711C0>
    │    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1883, in start_consuming
    self._process_data_events(time_limit=None)
    │    └ <function BlockingChannel._process_data_events at 0x00000186DE2713A0>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 2044, in _process_data_events
    self.connection.process_data_events(time_limit=time_limit)
    │    │                                         └ None
    │    └ <property object at 0x00000186DE23FB50>
    └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 851, in process_data_events
    self._dispatch_channel_events()
    │    └ <function BlockingConnection._dispatch_channel_events at 0x00000186DE2616C0>
    └ <BlockingConnection impl=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport obj...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 567, in _dispatch_channel_events
    impl_channel._get_cookie()._dispatch_events()
    │            └ <function Channel._get_cookie at 0x00000186DD90ED40>
    └ <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport ...
  File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\venv\Lib\site-packages\pika\adapters\blocking_connection.py", line 1510, in _dispatch_events
    consumer_info.on_message_callback(self, evt.method,
    │             │                   │     │   └ <member 'method' of '_ConsumerDeliveryEvt' objects>
    │             │                   │     └ <pika.adapters.blocking_connection._ConsumerDeliveryEvt object at 0x00000186DE98CAA0>
    │             │                   └ <BlockingChannel impl=<Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._As...
    │             └ <member 'on_message_callback' of '_ConsumerInfo' objects>
    └ <pika.adapters.blocking_connection._ConsumerInfo object at 0x00000186DE5ADE40>

> File "C:\Users\Admin\Documents\GitHub\rabbitmq-flask-service\app\workers\base.py", line 218, in callback
    'worker_id': self.logger.bind()['worker_id'],
                 │    │      └ <function Logger.bind at 0x00000186DE599A80>
                 │    └ <loguru.logger handlers=[(id=9, level=20, sink=<stdout>), (id=10, level=20, sink='app/static/logs/workers\2025\04\06/worker_2...
                 └ <app.workers.worker1.Worker1 object at 0x00000186DD502BD0>

TypeError: 'Logger' object is not subscriptable
2025-04-06 20:34:11 | INFO | Base Worker: Processing message with sequence ['worker1', 'worker2'], current index 0
2025-04-06 20:34:11 | INFO | Processing message: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Message processing completed successfully for data: {'message': {'data': 'hello'}, 'worker_config': {'sequence': ['worker1', 'worker2'], 'queues': ['urls_queue', 'urls_queue']}, 'timestamp': '2025-04-06T20:34:08.903333', 'message_id': '3ff8abb5-986e-4d46-91f1-c583bb9cdff9'}
2025-04-06 20:34:11 | INFO | Base Worker: Process message result: True
2025-04-06 20:34:11 | ERROR | Base Worker: Error processing message: 'Logger' object is not subscriptable
