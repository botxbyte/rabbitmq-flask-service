openapi: 3.0.0
info:
  title: RabbitMQ Flask Service API
  description: API for managing RabbitMQ queues and workers
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000
paths:
  /queue/list:
    get:
      summary: List all queues and their workers
      responses:
        '200':
          description: A list of queues and their workers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: connected
                  queue_count:
                    type: integer
                  queues:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        messages:
                          type: integer
                        messages_ready:
                          type: integer
                        messages_unacknowledged:
                          type: integer
                        worker_count:
                          type: integer
                        workers:
                          type: array
                          items:
                            type: object
                            properties:
                              consumer_tag:
                                type: string
                              channel_details:
                                type: object
                              connection_details:
                                type: object
                              pid:
                                type: integer
                              worker_pid:
                                type: integer

  /queue/create:
    post:
      summary: Create a new queue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queue_name:
                  type: string
      responses:
        '201':
          description: Queue created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Queue 'my_queue' created successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /queue/scale:
    post:
      summary: Scale the number of workers for a queue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                worker_type:
                  type: string
                count:
                  type: integer
                queue_name:
                  type: string
      responses:
        '200':
          description: Workers scaled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Scaling workers to 5
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /queue/workers/{queue_name}:
    get:
      summary: Get workers for a specific queue
      parameters:
        - name: queue_name
          in: path
          required: true
          description: Name of the queue
          schema:
            type: string
      responses:
        '200':
          description: List of workers for the specified queue
          content:
            application/json:
              schema:
                type: object
                properties:
                  queue_name:
                    type: string
                  worker_count:
                    type: integer
                  workers:
                    type: array
                    items:
                      type: object
                      properties:
                        consumer_tag:
                          type: string
                        channel_details:
                          type: object
                        connection_details:
                          type: object
                        process_id:
                          type: integer
                        connection_pid:
                          type: integer
                        peer_port:
                          type: integer
                        node:
                          type: string
                        worker_status:
                          type: string

  /queue/publish/{queue_name}:
    post:
      summary: Publish a task to a specific queue
      parameters:
        - name: queue_name
          in: path
          required: true
          description: Name of the queue
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                worker_type:
                  type: string
                domain_name:
                  type: string
      responses:
        '200':
          description: Task published successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  queue:
                    type: string
                  worker_type:
                    type: string
                  domain:
                    type: string
                  task_id:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /queue/clear/{queue_name}:
    post:
      summary: Clear a specific queue
      parameters:
        - name: queue_name
          in: path
          required: true
          description: Name of the queue
          schema:
            type: string
      responses:
        '200':
          description: Queue cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  queue_name:
                    type: string
                  messages_removed:
                    type: integer
                  workers_stopped:
                    type: integer
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string